services:
  # Go Backend - API Gateway and Orchestrator
  backend:
    build:
      context: .
      dockerfile: server.Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - ./server/.env
    environment:
      - RAG_SERVICE_URL=http://rag-service:3001
      - REDIS_URL=redis://redis:6379
      - GO_ENV=production
    depends_on:
      - rag-service
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # Node.js RAG Service
  rag-service:
    build:
      context: .
      dockerfile: rag-service.Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./rag-service/.env
    environment:
      - NODE_ENV=production
      - PORT=3001
      - ARTICLES_JSON_PATH=/app/data/articles.json
      - FAISS_STORE_PATH=/app/data/faiss_store
      - TRANSFORMERS_CACHE=/app/.cache
    networks:
      - app-network
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: client.Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./client/.env
    environment:
      - VITE_API_URL=http://localhost:8080
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped


  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

