services:
  # Go Backend - API Gateway and Orchestrator
  backend:
    build:
      context: .
      dockerfile: server.Dockerfile
    ports:
      - "8080:8080"
    environment:
      - RAG_SERVICE_URL=http://rag-service:3001
      - DATABASE_URL=postgresql://user:pass@postgres:5432/articledb
      - REDIS_URL=redis://redis:6379
      - PORT=8080
      - HOST=0.0.0.0
      - GO_ENV=production
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # Node.js RAG Service
  rag-service:
    build:
      context: .
      dockerfile: rag-service.Dockerfile
    ports:
      - "3001:3001"
    environment:
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - NODE_ENV=production
      - PORT=3001
      - ARTICLES_JSON_PATH=/app/data/articles.json
      - EMBEDDING_MODEL=Xenova/all-MiniLM-L6-v2
      - EMBEDDING_DIMENSIONS=384
      - CLAUDE_MODEL=claude-3-7-sonnet-latest
      - CHUNK_SIZE=1000
      - CHUNK_OVERLAP=200
      - MAX_TOKENS=4000
      - TEMPERATURE=0.7
      - FAISS_STORE_PATH=/app/data/faiss_store
      - TRANSFORMERS_CACHE=/app/.cache
    networks:
      - app-network
    volumes:
      - ./data:/app/data
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: client.Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8080
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # PostgreSQL for metadata
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=articledb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  # Qdrant Vector Database (used by RAG service)
  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - app-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
  qdrant_data:
